<?php
$blockGrid = $block->getBlockGrid();
$gridJsObjectName = $blockGrid->getJsObjectName();
?>

<div class="page-create-order">
    <div>
        <div id="order-search-customer" style="display: none;" class="admin__page-section order-search-items">
            <div class="admin__page-section-title">
                <span class="title"><?php /* @escapeNotVerified */ echo $block->getHeaderText() ?></span>
                <?php if ($block->getButtonsHtml()): ?>
                    <div class="actions"><?php echo $block->getButtonsHtml() ?></div>
                <?php endif; ?>
            </div>
            <?php  echo $block->getGridHtml(); ?>
        </div>
        <section id="order-items-customer" class="admin__page-section order-items" data-mage-init='{"loader": {}}'>
            <div class="admin__page-section-title">
                <strong class="title"><?php /* @escapeNotVerified */ echo $block->getHeaderText() ?></strong>
                <div class="actions">
                    <button class="action-secondary action-add" id="customer_price_add_category" type="button"><span>Add Customer</span></button> 

                </div>
            </div>
            <?php echo $block->getBlockForms(); ?>
        </section>
    </div>
</div>

<input type="hidden" name="category_customer" id="in_category_customer" data-form-part="category_form" value="" />
<script type="text/x-magento-init">
    {
        "*": {
            "Magedelight_Customerprice/customer/assign-customers": {
                "selectedProducts": <?php /* @escapeNotVerified */ echo $block->getProductsJson(); ?>,
                "gridJsObjectName": <?php /* @escapeNotVerified */ echo '"' . $gridJsObjectName . '"' ?: '{}'; ?>
            }
        }
    }
</script>
<!-- @todo remove when "UI components" will support such initialization -->
<script>
    require('mage/apply/main').apply();
</script>
<script>
require(['jquery',
        'jquery/ui',
        'mage/mage',
        'mage/translate'
        ], function ($) {
        jQuery = $;    
            jQuery(document).ready(function(){
                var exits = jQuery.parseJSON('<?php echo $block->getexitsCustomer() ?>');
                
                jQuery('#customer_price_add_category').click(function(){
                    jQuery('#order-search-customer').show();
                    this.hide();
                });
                var itemCount = 0;
                jQuery('#add_selected_customers').click(function() {
                    jQuery('#attribute-options-table-category tbody tr.customs').remove();
                    jQuery('#no-product').remove();
                    if(jQuery('#in_category_customer').val()){
                    var catString = JSON.parse(jQuery('#in_category_customer').val());
                    console.log(catString);
                    jQuery.each(catString,function(index,item) {
                        if(jQuery.inArray(item.value, exits) == -1) {
                            var pname = item.name;
                            var pid=  item.value;
                            var discount = "";
                            var sign = '';
                            var css_class = 'customs';
                            var cid = '<?php echo $this->getRequest()->getParam("id") ?>';
                            var id = 'option_' + itemCount;
                            var item = generateLiTag(pname, pid, discount, sign, css_class, cid, id);
                            jQuery(item).hide().appendTo('#attribute-options-table-category tbody').fadeIn(1000);
                            itemCount++;
                        }
                    });
                    }
                    
                    jQuery('#product_categories').val('');
                    //jQuery('#product-categories input[type="checkbox"]').prop("checked", false);
                    jQuery('#order-search-customer').hide();
                    jQuery('#customer_price_add_category').show();
                });
                jQuery(document).on('click', '.delete-category-save', function() {
                    var categoryVal = jQuery(this).attr('rel');
                    jQuery.ajax({
                        showLoader: true,
                        url: "<?php echo $block->getUrl('md_customerprice/category/delete'); ?>",
                        data: {'id': categoryVal },
                        type: "POST",
                        dataType: 'json'
                    }).done(function (data) {
                        if(data) {
                            jQuery('#category-row-'+categoryVal).remove();    
                        }
                    });
                });
                jQuery(document).on('click', '.category-customer-unsaved', function(){
                    var categoryVal = jQuery(this).attr('rel');
                    jQuery('#'+categoryVal).remove();    
                });
                
        function generateLiTag(pname, pid, discount, sign, css_class, cid, id) {
            var randlabelnumber = getRandomInt(1, 100000);
            var item = '<tr class="option-row ' + css_class + '" id = "category-row-'+ pid +'-'+randlabelnumber +'" >' +
                '<td><span>' + pid + '</span><input data-form-part="category_form" type="hidden" name="customeroption[value][' + id + '][pid]" value="' + pid + '" <?php if ($this->getReadOnly()): ?> disabled="disabled"<?php endif; ?>/><\/td>' +
                '<td><span><?php echo "' + pname + '" ?></span><input data-form-part="category_form" type="hidden" name="customeroption[value][' + id + '][pname]" value="' + pname + '" <?php if ($this->getReadOnly()): ?> disabled="disabled"<?php endif; ?>/><\/td>' +
                '<td><input data-form-part="category_form" style="width:50%;" class="required-entry validate-zero-or-greater input-text admin__control-text required-entry _required validate-number validate-digits-range digits-range-0-100' + css_class + '" type="text" name="customeroption[value][' + id + '][discount]" value="' + discount + '" <?php if ($this->getReadOnly()): ?> disabled="disabled"<?php endif; ?>/>&nbsp; <strong>%</strong> &nbsp;' + sign + '<\/td>' + 
                '<td id="delete_button_container_' + id + '">' +
                '<input data-form-part="category_form" type="hidden" class="delete-flag" name="customeroption[value][' + id + '][cid]" value="' + cid + '" />' +
                '<button class="delete-option category-customer-unsaved" rel="category-row-'+ pid +'-'+randlabelnumber +'" type="button"><span>Remove Category</span><\/button>' +
                '<\/td>' +
                '<\/tr>';
            return item;
        }
    function getRandomInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }
            });      
        });
</script>